name: VmHub

on:
  push:
    branches:
      - "main"
      
jobs:
    build:
      name: Docker Workflow 
      env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/mydevrepo
      runs-on: ubuntu-latest
      environment: Dev
      steps:
        -
         name: Generate build ID
         id: prep
         run: |
            name=${{vars.NAME}}
            sha=${GITHUB_SHA:0:7}
            echo "::set-output name=BUILD_ID::${name}-${sha}"          
        -
          name: Checkout
          uses: actions/checkout@v3
        -
          name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        -
          name: Build an image
          run: |
                  docker-compose build
                  docker tag mydevproject_frontend:latest $IMAGE:${{ steps.prep.outputs.BUILD_ID }}
                  docker push $IMAGE:${{ steps.prep.outputs.BUILD_ID }}
          env:
             DOCKER_IMAGE_TAG: ${{ steps.prep.outputs.BUILD_ID }}

    pull:
       name: Vm Workflow
       env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/mydevrepo
       if: ${{ success() }}
       runs-on: ubuntu-latest
       environment: Dev
       needs: build
       steps:
       -  name: Generate build ID
          id: prep
          run: |
              name=${{vars.NAME}}
              sha=${GITHUB_SHA:0:7}
              echo "::set-output name=BUILD_ID::${name}-${sha}"
       
       - name: Login to Docker Hub
         uses: docker/login-action@v2
         with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            
       - name: Deploy to VM
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USERNAME }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           port: 22
           script: |
                 cd /home/azureuser/myDevProject
                 docker container rm -f $(docker container ls -aq)
                 docker image rm -f $(docker image ls -q)
                 docker pull elyon204/mydevrepo:${{ steps.prep.outputs.BUILD_ID }}
                 DOCKER_IMAGE_TAG=${{ steps.prep.outputs.BUILD_ID }} docker-compose up -d
                 

